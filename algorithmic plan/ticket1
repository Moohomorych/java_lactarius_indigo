Напишите метод под названием alternate, который принимает два списка целых чисел в качестве параметров и возвращает новый список, содержащий чередующиеся элементы из двух списков, в следующем порядке:
• 1-ый элемент из 1-ого списка
• 1-ый элемент из 2-ого списка
• 2-ой элемент из 1-ого списка
• 2-ой элемент из 2-ого списка 
• 3-ий элемент из 1-ого списка
• 3-ий элемент из 2-ого списка
Если списки не содержат одинаковое количество элементов, оставшиеся элементы из более длинного списка должны быть расположены последовательно в конце. Например, для первого списка (1, 2, 3, 4, 5) и второго списка (6, 7, 8, 9, 10, 11, 12) вызов alternate (list1, list2) должен вернуть список, содержащий (1, 6, 2, 7, 3, 8, 4, 9, 5, 10, 11, 12). Не изменяйте передаваемые списки параметров.

Алгоритмический план:

1. Инициализировать новый пустой список `result` для хранения результата чередования элементов.
2. Получить размеры списков `list1` и `list2` и сохранить их в переменные `size1` и `size2` соответственно.
3. Найти максимальный размер из `size1` и `size2` и сохранить его в переменную `maxSize`.
4. Создать цикл, который будет выполняться от 0 до `maxSize - 1` (включительно) для обработки чередования элементов:
   - Если текущий индекс `i` меньше `size1`, добавить элемент из `list1` с индексом `i` в список `result`.
   - Если текущий индекс `i` меньше `size2`, добавить элемент из `list2` с индексом `i` в список `result`.
5. Вернуть список `result` в качестве результата метода `alternate`.
6. В методе `main`:
   - Получить элементы первого списка с помощью метода `enterListFromKeyboard`.
   - Получить элементы второго списка с помощью метода `enterListFromKeyboard`.
   - Вызвать метод `alternate` с передачей обоих списков и сохранить результат.
   - Вывести результат на экран.
